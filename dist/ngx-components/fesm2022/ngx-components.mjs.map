{"version":3,"file":"ngx-components.mjs","sources":["../../../projects/ngx-components/src/lib/action/action/action.component.ts","../../../projects/ngx-components/src/lib/action/action/action.component.html","../../../projects/ngx-components/src/lib/action/action.module.ts","../../../projects/ngx-components/src/lib/overlay/overlay/overlay.component.ts","../../../projects/ngx-components/src/lib/overlay/overlay/overlay.component.html","../../../projects/ngx-components/src/lib/overlay/overlay.module.ts","../../../projects/ngx-components/src/lib/editor/editor.directive.ts","../../../projects/ngx-components/src/lib/editor/editor/editor.component.ts","../../../projects/ngx-components/src/lib/editor/editor/editor.component.html","../../../projects/ngx-components/src/lib/editor/editor.module.ts","../../../projects/ngx-components/src/lib/editor/editor.service.ts","../../../projects/ngx-components/src/lib/editor/public-api.ts","../../../projects/ngx-components/src/lib/picker/picker-editor/picker-editor.component.ts","../../../projects/ngx-components/src/lib/picker/picker-editor/picker-editor.component.html","../../../projects/ngx-components/src/lib/picker/picker.service.ts","../../../projects/ngx-components/src/lib/picker/picker/picker.component.ts","../../../projects/ngx-components/src/lib/picker/picker/picker.component.html","../../../projects/ngx-components/src/lib/picker/picker.module.ts","../../../projects/ngx-components/src/utils/utils.ts","../../../projects/ngx-components/src/lib/filter/text-filter/text-filter.component.ts","../../../projects/ngx-components/src/lib/filter/text-filter/text-filter.component.html","../../../projects/ngx-components/src/lib/filter/date-filter/date-filter.component.ts","../../../projects/ngx-components/src/lib/filter/date-filter/date-filter.component.html","../../../projects/ngx-components/src/lib/filter/select-filter/select-filter.component.ts","../../../projects/ngx-components/src/lib/filter/select-filter/select-filter.component.html","../../../projects/ngx-components/src/lib/filter/filter/filter.component.ts","../../../projects/ngx-components/src/lib/filter/filter/filter.component.html","../../../projects/ngx-components/src/lib/filter/filter.module.ts","../../../projects/ngx-components/src/lib/sort-panel/sort-panel/sort-panel.component.ts","../../../projects/ngx-components/src/lib/sort-panel/sort-panel/sort-panel.component.html","../../../projects/ngx-components/src/lib/sort-panel/sort-panel.module.ts","../../../projects/ngx-components/src/models/data-type.ts","../../../projects/ngx-components/src/lib/table/table-column.directive.ts","../../../projects/ngx-components/src/lib/table/table/table.component.ts","../../../projects/ngx-components/src/lib/table/table/table.component.html","../../../projects/ngx-components/src/lib/table/table.module.ts","../../../projects/ngx-components/src/ngx-components.ts"],"sourcesContent":["import { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { Action } from '../../../models/action';\n\n@Component({\n  selector: 'app-action',\n  templateUrl: './action.component.html',\n  styleUrls: ['./action.component.scss']\n})\nexport class ActionComponent implements OnInit {\n  \n  @Input() actions?: Action[];\n  @Input() data?: any;\n  @ContentChild('template') template?: TemplateRef<any>;\n  items?: MenuItem[];\n\n  ngOnInit() {\n    console.log('actions.loaded!');\n    this.items = this.actions?.map(x => this.getItem(x));\n  }\n\n  // TODO: Add permissions to action \n  private getItem(action: Action): MenuItem {\n    return {\n      label: action.name,\n      icon: action.icon,\n      // TODO Remove command: action.action?.(this.data),\n      items: action.items?.map(x => this.getItem(x)),\n      visible: action.show?.(this.data) !== false,\n      state: action\n    }\n  }\n}\n","@for (item of items; track item) {\n  @if (item.visible) {\n    <span (click)=\"item.items?.length ? menu.toggle($event) : item.state?.['action']?.(data)\">\n      <ng-container *ngTemplateOutlet=\"template ?? icon; context: { $implicit: item }\" />\n      <p-menu #menu [model]=\"item.items\" [popup]=\"true\" appendTo=\"body\" />\n    </span>\n  }\n}\n\n<ng-template #icon let-item>\n  <p-button [pTooltip]=\"item.label\" [showDelay]=\"500\" tooltipPosition=\"top\"\n    [icon]=\"item.icon\" [text]=\"true\" [rounded]=\"true\" severity=\"secondary\" />\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActionComponent } from './action/action.component';\nimport { MenuModule } from 'primeng/menu';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n  declarations: [\n    ActionComponent\n  ],\n  imports: [\n    CommonModule,\n    MenuModule,\n    ButtonModule\n  ],\n  exports: [\n    ActionComponent\n  ]\n})\nexport class ActionModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-overlay',\r\n  templateUrl: './overlay.component.html',\r\n  styleUrls: ['./overlay.component.scss']\r\n})\r\nexport class OverlayComponent {\r\n  \r\n  @Input() dismissable = true;\r\n  @Input() style?: { [name: string]: any }\r\n  @Output() onShow = new EventEmitter();\r\n  @Output() onHide = new EventEmitter();\r\n  isOpen = false;\r\n  target: any;\r\n\r\n  toggle(target: any) {\r\n    this.isOpen ? this.hide() : this.show(target);\r\n  }\r\n\r\n  show(target: any) {\r\n    this.target = target;\r\n    this.isOpen = true;\r\n    this.onShow.emit();\r\n  }\r\n\r\n  hide() {\r\n    this.isOpen = false;\r\n    this.onHide.emit();\r\n  }\r\n}","<ng-template \r\n    cdkConnectedOverlay\r\n    [cdkConnectedOverlayOrigin]=\"target\"\r\n    [cdkConnectedOverlayOpen]=\"isOpen\" \r\n    [cdkConnectedOverlayHasBackdrop]=\"dismissable\"\r\n    cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\" \r\n    (backdropClick)=\"hide()\">\r\n\r\n    <div class=\"overlay\" [ngStyle]=\"style\">\r\n        <ng-content></ng-content>\r\n    </div>  \r\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayComponent } from './overlay/overlay.component';\nimport { OverlayModule as CdkOverlayModule } from '@angular/cdk/overlay';\n\n@NgModule({\n  declarations: [\n    OverlayComponent\n  ],\n  imports: [\n    CommonModule,\n    CdkOverlayModule\n  ],\n  exports: [\n    OverlayComponent\n  ]\n})\nexport class OverlayModule { }\n","import { ComponentRef, Directive, Input, OnDestroy, OnInit, Type, ViewContainerRef } from '@angular/core';\r\n//import { EditorComponent } from './editor/editor.component';\r\n\r\n@Directive({\r\n  selector: '[appEditor]',\r\n})\r\nexport class EditorDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() component!: Type<any>;\r\n  @Input() editor!: any; // EditorComponent;\r\n  componentRef!: ComponentRef<any>;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef) { }\r\n\r\n  ngOnInit() {\r\n    this.componentRef = this.viewContainerRef.createComponent(this.component);\r\n    this.componentRef.instance.editor = this.editor;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.componentRef.destroy();\r\n  }\r\n}\r\n","import { NgbActiveOffcanvas } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AfterContentChecked, ChangeDetectorRef, Component, EventEmitter, InjectionToken, Input, Type } from '@angular/core';\r\nimport { EditorConfig } from '../../../models/editor-config';\r\n\r\n//import { MenuItem } from 'primeng/api';\r\n//import { EditorTab } from '../../../models/editor-tab';\r\n\r\n// Injection token that can be used to access the editor\r\nexport const EDITOR = new InjectionToken<EditorComponent>('editor');\r\n\r\n// TODO: Translate labels! (save, cancel...)\r\n// TODO: Re-enable tabs!\r\n@Component({\r\n  selector: 'app-editor',\r\n  templateUrl: './editor.component.html',\r\n  styleUrls: ['./editor.component.scss']\r\n})\r\nexport class EditorComponent implements AfterContentChecked {\r\n\r\n  @Input() component!: Type<any>;\r\n  @Input() config!: EditorConfig;\r\n  saved = new EventEmitter(); // TODO: Change name in \"saved\"?\r\n  loading: boolean = false;\r\n  //tabs?: MenuItem[];\r\n  //activeTab?: MenuItem;\r\n\r\n  constructor(\r\n    public offcanvas: NgbActiveOffcanvas,\r\n    private changeDetector: ChangeDetectorRef) { }\r\n\r\n  save() {\r\n    this.saved.emit();\r\n  }\r\n\r\n  close(data?: any) {\r\n    this.offcanvas.close(data);\r\n  }\r\n\r\n  // TODO: Why needed?\r\n  ngAfterContentChecked(): void {\r\n    //this.changeDetector.detectChanges();\r\n  }\r\n\r\n  /*setTabs(tabs: EditorTab[]) {\r\n    this.tabs = tabs.map<MenuItem>(x => ({ ...x, icon: 'bi bi-' + x.icon }));\r\n    this.activeTab = this.tabs.find(x => x.id === this.config.activeTab) ?? this.tabs[0];\r\n  }*/\r\n}\r\n","<div class=\"offcanvas-header\">\n  <div class=\"d-flex justify-content-between align-items-center w-100\">\n    <div class=\"flex-grow-1 text-truncate\">\n      <h5 class=\"title\">{{ config.title }}</h5>\n      @if (config.subtitle) {\n        <p class=\"subtitle\">{{ config.subtitle }}</p>\n      }\n    </div>\n    <!-- // TODO: Enable tabs -->\n    <!--<p-tabMenu [model]=\"tabs\" [activeItem]=\"activeTab\" (activeItemChange)=\"activeTab = $event\">\n    <ng-template pTemplate=\"item\" let-item>\n      <div class=\"tab-item\">\n        <i class=\"tab-icon {{item.icon}}\"></i>\n        <span class=\"tab-text\">{{ item.label }}</span>\n      </div>\n    </ng-template>\n  </p-tabMenu>-->\n</div>\n</div>\n\n<div class=\"offcanvas-body bg-light\">\n  <div class=\"offcanvas-content\">\n    @if (loading) {\n      @for (a of [].constructor(5); track a) {\n        <p-skeleton styleClass=\"mb-4\" height=\"3rem\" />\n      }\n    }\n    <ng-template appEditor [component]=\"component\" [editor]=\"this\" />\n  </div>\n</div>\n\n<div class=\"offcanvas-footer\">\n  <div class=\"offcanvas-footer-content\">\n    <p-button [text]=\"true\" [style]=\"{'height': '36px', 'margin-right': '0.5rem'}\" (click)=\"offcanvas.dismiss()\">\n      {{ 'Annulla' }}\n    </p-button>\n    <p-button [style]=\"{'height': '36px'}\" (click)=\"save()\">\n      {{ 'Salva' }}\n    </p-button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EDITOR, EditorComponent } from './editor/editor.component';\nimport { NgbOffcanvasModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ButtonModule } from 'primeng/button';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { EditorDirective } from './editor.directive';\n\n@NgModule({\n  declarations: [\n    EditorComponent,\n    EditorDirective\n  ],\n  providers: [\n    { provide: EDITOR, useValue: {} } // TODO: Needed?\n  ],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    SkeletonModule,\n    TabMenuModule,\n    NgbOffcanvasModule\n  ],\n  exports: [\n    EditorComponent, // TODO: Needed?\n  ]\n})\nexport class EditorModule { }\n","import { Injectable, Type } from '@angular/core';\r\nimport { EditorComponent } from './editor/editor.component';\r\nimport { EditorConfig } from '../../models/editor-config';\r\nimport { NgbOffcanvas, NgbOffcanvasRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EditorService {\r\n\r\n  public offcanvas!: NgbOffcanvasRef;\r\n\r\n  constructor(public ngbOffcanvas: NgbOffcanvas) { }\r\n\r\n  // Open the editor component\r\n  open(component: Type<any>, config: EditorConfig) {\r\n    this.offcanvas = this.ngbOffcanvas.open(EditorComponent, {\r\n      panelClass: 'myoffcanvas-' + (config.size ?? 'small'), // Does it work with local scss and ngdeep? yes, change name\r\n      position: 'end',\r\n      backdrop: 'static'\r\n    });\r\n\r\n    this.offcanvas.componentInstance.config = config;\r\n    this.offcanvas.componentInstance.component = component;\r\n  }\r\n\r\n  // TODO: Why a method? Use \"closed\" used as closed.subscribe(...)\r\n  onClosed() {\r\n    return this.offcanvas.closed;\r\n  }\r\n\r\n  // TODO: Is this working?\r\n  get closed(): Observable<any> {\r\n    return this.offcanvas.closed;\r\n  }\r\n\r\n  // TODO: Add \"dismissed\" event\r\n}\r\n","export * from './editor.module';\r\nexport * from './editor/editor.component';\r\n//export * from './editor.directive';\r\nexport * from './editor.service';\r\n// TODO: Export also directive and service?","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\n//import { PagedList } from 'src/app/shared/models/paged-list';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n// import { PagedRequest } from 'src/app/shared/models/paged-request';\r\n// import { getRequest } from '../../../other/utils';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n//import { FilterRequest } from 'src/app/shared/models/filter-request';\r\nimport { PickerConfig } from '../../../models/picker-config';\r\nimport { Entity } from '../../../models/entity';\r\nimport { EDITOR, EditorComponent } from '../../editor';\r\n\r\n@Component({\r\n  selector: 'app-picker-editor',\r\n  templateUrl: './picker-editor.component.html',\r\n  styleUrls: ['./picker-editor.component.scss']\r\n})\r\nexport class PickerEditorComponent<T extends Entity> implements OnInit{\r\n\r\n  config!: PickerConfig<T>;\r\n  // TODO: Remove service?: any;\r\n  items?: T[]; //PagedList<T>; // TODO: Avoid pagedlist, as in table\r\n  params: any = { }; // PagedRequest; // TODO: USe it for paging?\r\n  selection!: SelectionModel<T>;\r\n  @Output() changed = new EventEmitter(); // TODO: USe it to update data from outside\r\n\r\n  @Input() totalItems?: number;\r\n  @Input() pageSize?: number = 10;\r\n\r\n  constructor(\r\n    @Inject(EDITOR) public editor: EditorComponent) { } //,\r\n    // TODO REMOVE private injector: Injector) { }\r\n\r\n  ngOnInit(): void {\r\n    const data = this.editor.config.data;\r\n    this.config = data.config;\r\n    // this.service = this.injector.get<any>(data.config.service);\r\n    this.editor.saved.subscribe(() => this.save());\r\n\r\n    this.selection = new SelectionModel<T>(true, this.config.multiple ? data.items : []);\r\n    this.selection.isSelected = this.isChecked.bind(this);\r\n    // TODO this.params = getRequest(this.config?.filters);\r\n    // TODO this.getData();\r\n  }\r\n\r\n  /*getData(): void {\r\n    this.service.search(this.params).subscribe((result: PagedList<T>) => {\r\n      this.items = result;\r\n    });\r\n  }*/\r\n\r\n  toggle(item: T) {\r\n    const selected = this.selection.selected.find(x => x.id === item.id);\r\n    if (selected) this.selection.deselect(selected);\r\n    else this.selection.select(item);\r\n    if (!this.config.multiple) this.save();\r\n  }\r\n\r\n  save() {\r\n    this.editor.close(this.selection.selected);\r\n  }\r\n\r\n  isChecked(item: T): boolean {\r\n    return this.selection.selected.some(x => x.id === item.id);\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.params.pageNumber = event.pageIndex + 1;\r\n    // this.getData();\r\n    this.changed.emit(this.params);\r\n  }\r\n\r\n  // TODO: Enable again\r\n  /*filter(filters: FilterRequest[]) {\r\n    this.params.filters = filters;\r\n    this.params.pageNumber = 1;\r\n    this.getData();\r\n  }*/\r\n}\r\n","<!-- Filters -->\n<!-- // TODO: Add filters... -->\n<!--<app-filters *ngIf=\"config.filters\" [filters]=\"config.filters\" (onFilter)=\"filter($event)\" />-->\n\n<!-- Selection list -->\n@if (items?.length) {\n  <mat-selection-list #picker class=\"mt-2\"\n    [multiple]=\"config.multiple\" [hideSingleSelectionIndicator]=\"true\">\n    <!-- // TODO: Check if the congig.id(item) condition below is correct -->\n    @for (item of items; track item) {\n      <mat-list-option class=\"list-item\" [value]=\"item.id\"\n        [selected]=\"selection.isSelected(item)\" (click)=\"toggle(item)\">\n        <span matListItemTitle>{{ config.name(item) }}</span>\n        @if (config.description) {\n          <span matListItemLine>{{ config.description(item) }}</span>\n        }\n      </mat-list-option>\n    }\n  </mat-selection-list>\n} @else {\n  <div class=\"border rounded p-3 mt-3\">\n    {{ 'Nessun elemento da visualizzare' }} <!-- // TODO: Translate in whole library -->\n  </div>\n}\n\n\n<!-- Pagination -->\n<!-- // TODO: Chnage pagination -->\n@if (items && totalItems && pageSize && totalItems > pageSize) {\n  <mat-paginator [length]=\"totalItems\"\n    [pageSize]=\"pageSize\" [hidePageSize]=\"true\" (page)=\"onPageChange($event)\" showFirstLastButtons />\n}","import { Injectable, Type } from '@angular/core';\r\nimport { PickerEditorComponent } from './picker-editor/picker-editor.component';\r\nimport { PickerConfig } from '../../models/picker-config';\r\nimport { EditorService } from '../editor/editor.service'; // TODO: Import ok?\r\n\r\n@Injectable({ providedIn: 'root' }) // TODO: Needed?\r\nexport class PickerService {\r\n\r\n  constructor(public editorService: EditorService) { }\r\n\r\n  open(config: PickerConfig, data?: any, editor?: Type<any>) {\r\n    const editorConfig = {...config.editor, data: { config: config, items: data } };\r\n    this.editorService.open(editor ?? PickerEditorComponent, editorConfig);\r\n  }\r\n\r\n  selected() {\r\n    return this.editorService.onClosed();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms'; \r\nimport { PickerService } from '../picker.service';\r\nimport { PickerConfig } from '../../../models/picker-config';\r\nimport { Entity } from '../../../models/entity';\r\n\r\n@Component({\r\n  selector: 'app-picker',\r\n  templateUrl: './picker.component.html',\r\n  styleUrls: ['./picker.component.scss']\r\n})\r\nexport class PickerComponent<T extends Entity> implements OnChanges {\r\n\r\n  @Input() label?: string;\r\n  @Input() config!: PickerConfig<T>;\r\n  @Input() data?: T | T[];\r\n  @Input() control?: FormControl;\r\n  @Input() disabled?: boolean;\r\n  @Output() change = new EventEmitter<number | number[] | undefined>();\r\n  items!: T[];\r\n\r\n  constructor(public pickerService: PickerService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['data']) {\r\n      this.items = this.setValue(changes['data'].currentValue);\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  openPicker() {\r\n    this.pickerService.open(this.config, this.items);\r\n    this.pickerService.selected().subscribe((result: T[]) => {\r\n      this.items = result;\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  remove(i: number) {\r\n    this.items.splice(i, 1);\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    const value = this.getValue();\r\n    this.control?.patchValue(value);\r\n    this.change.emit(value);\r\n  }\r\n\r\n  hasError(name?: string): boolean {\r\n    const hasError = name ? this.control?.hasError(name) : this.control?.invalid;\r\n    return !!hasError && !!this.control?.touched;\r\n  }\r\n\r\n  setValue = (x: T | T[]) => Array.isArray(x) ? x : x ? [x] : [];\r\n\r\n  getValue = (): number | undefined | number[] => this.config.multiple ?\r\n    this.items.map(x => x.id!) : this.items[0]?.id;\r\n}\r\n","@if (items?.length) {\n  <div class=\"mb-2 field\" (click)=\"openPicker()\">\n    <ul class=\"list-group list-group-flush\">\n      @for (item of items; track item; let i = $index) {\n        <li class=\"list-group-item\">\n          @if (item) {\n            <div class=\"d-flex align-items-center\">\n              <div class=\"flex-grow-1 lh-sm\">\n                <p class=\"mb-0\">{{ config.name(item) }}</p>\n                @if (config.description) {\n                  <small class=\"text-muted\">{{ config.description(item) }}</small>\n                }\n              </div>\n              @if (!disabled) {\n                <p-button (click)=\"remove(i); $event.stopPropagation()\"\n                  [text]=\"true\" [rounded]=\"true\" icon=\"bi bi-x-lg\" severity=\"secondary\" styleClass=\"px-2 py-1\" />\n              }\n            </div>\n          }\n        </li>\n      }\n    </ul>\n    <label>{{ label }}</label>\n  </div>\n}\n\n@if (!disabled && !items?.length) {\n  <button pButton type=\"button\" class=\"p-button-outlined p-button-secondary w-100 border-dashed\"\n    [class.btn-error]=\"hasError()\" (click)=\"openPicker()\">\n    {{ config.editor.title }}\n  </button>\n}\n\n<!-- // TODO: Include or avoid use of mat-error -->\n<!--<mat-error class=\"mb-2\">-->\n@if (hasError('required')) {\n  {{ 'error.required' }}\n}\n<!--</mat-error>-->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbOffcanvasModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ButtonModule } from 'primeng/button';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { PickerComponent } from './picker/picker.component';\nimport { MatListModule } from '@angular/material/list';\nimport { PickerEditorComponent } from './picker-editor/picker-editor.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [\n    PickerComponent,\n    PickerEditorComponent\n  ],\n  imports: [\n    MatListModule,\n    MatPaginatorModule, // TODO: Substitute with primeng\n    // TODO: Keep only needed!!!\n    // EditorModule, // TODO. needed?\n    CommonModule,\n    ButtonModule,\n    //SkeletonModule,\n    //TabMenuModule,\n    //NgbOffcanvasModule\n  ],\n  exports: [\n    PickerComponent,\n    PickerEditorComponent\n  ]\n})\nexport class PickerModule { }\n","\r\nimport { Filter } from \"../models/filter\";\r\nimport { FilterRequest } from \"../models/filter-request\";\r\nimport { PagedRequest } from \"../models/paged-request\";\r\n\r\nexport function hasValue(request: FilterRequest): boolean {\r\n  return request.value !== undefined || !!request.filters?.some(x => hasValue(x));\r\n}\r\n\r\nexport function getRequest(filters?: Filter[], pageSize?: number): PagedRequest {\r\n  return { \r\n    pageNumber: 1, \r\n    pageSize: pageSize ?? 10, \r\n    filters: filters?.map(x => x.request).filter(x => hasValue(x)) \r\n  };\r\n}","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Filter } from '../../../models/filter';\r\n\r\n@Component({\r\n  selector: 'app-text-filter',\r\n  templateUrl: './text-filter.component.html',\r\n  styleUrls: ['./text-filter.component.scss']\r\n})\r\nexport class TextFilterComponent {\r\n\r\n  @Input() filter!: Filter;\r\n  @Output() changed = new EventEmitter();\r\n  value?: string;\r\n\r\n  clear() { \r\n    this.setValue(undefined);\r\n    this.value = undefined;\r\n  }\r\n\r\n  onInput() {\r\n    setTimeout(() => { this.setValue(this.value)}, 500);\r\n  }\r\n\r\n  setValue(value?: string) {\r\n    this.filter.request.filters?.forEach(x => x.value = value);\r\n    this.filter.request.value = value;\r\n    this.changed.emit();\r\n  }\r\n}\r\n","<mat-form-field class=\"w-100\" subscriptSizing=\"dynamic\">\n  @if (filter.label) {\n    <mat-label>{{ filter.label }}</mat-label>\n  }\n  <input matInput type=\"text\" [(ngModel)]=\"value\" (ngModelChange)=\"onInput()\">\n  @if (filter.request?.value) {\n    <p-button matSuffix (click)=\"clear()\"\n      [text]=\"true\" [rounded]=\"true\" icon=\"bi bi-x-lg\" severity=\"secondary\" styleClass=\"me-1\" />\n  }\n</mat-form-field>","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n// TODO import { format } from 'date-fns';\r\n// TODO import * as moment from 'moment';\r\nimport { Filter } from '../../../models/filter';\r\n\r\n@Component({\r\n  selector: 'app-date-filter',\r\n  templateUrl: './date-filter.component.html',\r\n  styleUrls: ['./date-filter.component.scss']\r\n})\r\nexport class DateFilterComponent {\r\n\r\n  @Input() filter!: Filter;\r\n  @Output() changed = new EventEmitter();\r\n\r\n  clear() { \r\n    this.filter.request.value = undefined;\r\n    this.changed.emit();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    if (!event.value) return;\r\n    // TODO: Try to use primeng datepicker and to avoid moment and date-fns\r\n    // TODO this.filter.request.value = format(moment(event.value).toDate(), 'yyyy-MM-dd');\r\n    this.changed.emit();\r\n  }\r\n}\r\n","<!--<mat-form-field class=\"w-100\" subscriptSizing=\"dynamic\">\r\n    <mat-label>{{ filter.label }}</mat-label>\r\n    <input matInput [matDatepicker]=\"picker\" [value]=\"filter.request.value\" (dateChange)=\"onChange($event)\">\r\n    <p-button matSuffix *ngIf=\"filter.request?.value\" (click)=\"clear()\" icon=\"bi bi-x-lg\"\r\n        styleClass=\"p-button-rounded p-button-text p-button-secondary me-1\" />\r\n    <p-button matSuffix *ngIf=\"!filter.request?.value\" (click)=\"picker.open()\" icon=\"bi bi-calendar\"\r\n        styleClass=\"p-button-rounded p-button-text p-button-secondary me-1\" />\r\n    <mat-datepicker #picker />\r\n</mat-form-field>-->\r\n\r\n<!-- // TODO: Error in console.... remove it-->","import { Component, EventEmitter, Injector, Input, OnInit, Output } from '@angular/core';\r\nimport { PagedRequest } from '../../../models/paged-request';\r\nimport { RepositoryService } from '../../../services/repository.service';\r\nimport { Filter } from '../../../models/filter';\r\nimport { FilterOption } from '../../../models/filter-option';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-select-filter',\r\n  templateUrl: './select-filter.component.html',\r\n  styleUrls: ['./select-filter.component.scss']\r\n})\r\nexport class SelectFilterComponent implements OnInit {\r\n\r\n  @Input() filter!: Filter;\r\n  @Output() changed = new EventEmitter();\r\n  service!: RepositoryService;\r\n  options: FilterOption[] = [];\r\n  control = new FormControl<string>('');\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  ngOnInit() {\r\n    const service = this.filter.select?.service;\r\n    if (service) this.service = this.injector.get<any>(service);\r\n    else {\r\n      const option = this.filter.select!.options?.find(x => x.value === this.filter.request.value);\r\n      this.control.setValue(option?.label ?? '');\r\n    }\r\n  }\r\n\r\n  getOptions() {\r\n    const value = this.control.value;\r\n    if (this.service) {\r\n      let request: PagedRequest = { pageNumber: 1, pageSize: 10 };\r\n      const filter = this.filter.select!.request;\r\n      if (filter?.field && value) request.filters = [{ ...filter, value }];\r\n      this.service.search(request).subscribe(x => {\r\n        this.options = x.data.map(x => ({ label: this.filter.select!.label!(x), value: x.id }));\r\n      });\r\n    }\r\n    else this.options = this.filter.select!.options?.filter(x =>\r\n      !value || x.label?.toLowerCase().includes(value.toLowerCase())) ?? [];\r\n  }\r\n\r\n  onInput() {\r\n    setTimeout(() => this.getOptions(), 500);\r\n  }\r\n\r\n  clear() {\r\n    this.options = [];\r\n    this.filter.request.value = undefined;\r\n    this.control.setValue('');\r\n    this.changed.emit();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    const option: FilterOption = event.option.value;\r\n    this.filter.request.value = option.value;\r\n    this.control.setValue(option.label);\r\n    this.changed.emit();\r\n  }\r\n}","<mat-form-field class=\"w-100\" subscriptSizing=\"dynamic\">\n  @if (filter.label) {\n    <mat-label>{{ filter.label }}</mat-label>\n  }\n  <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"control\" (input)=\"onInput()\">\n\n  <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onChange($event)\">\n    @for (option of options; track option) {\n      <mat-option [value]=\"option\">\n        {{ option.label }}\n      </mat-option>\n    }\n  </mat-autocomplete>\n\n  @if (filter.request.value) {\n    <p-button matSuffix (click)=\"clear();$event.stopPropagation()\"\n      [text]=\"true\" [rounded]=\"true\" icon=\"bi bi-x-lg\" severity=\"secondary\" styleClass=\"me-1\" />\n  }\n\n  @if (!filter.request.value) {\n    <p-button matSuffix (click)=\"getOptions()\"\n      [text]=\"true\" [rounded]=\"true\" icon=\"bi bi-chevron-down\" severity=\"secondary\" styleClass=\"me-1\" />\n  }\n</mat-form-field>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport * as _ from 'lodash'; // TODO USe import { cloneDeep } from 'lodash/cloneDeep';\r\nimport { Filter } from '../../../models/filter';\r\nimport { FilterRequest } from '../../../models/filter-request';\r\nimport { OverlayComponent } from '../../overlay';\r\nimport { hasValue } from '../../../utils/utils';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss'],\r\n})\r\nexport class FilterComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() filters?: Filter[];\r\n  @Output() onFilter = new EventEmitter<FilterRequest[]>(); // TODO: Rename\r\n  @ViewChild(OverlayComponent) overlay?: OverlayComponent;\r\n  hasFilters!: boolean;\r\n  hasOverlayFilters!: boolean;\r\n\r\n  ngOnInit() {\r\n    const visible = this.filters?.filter(x => x.type != 'hidden');\r\n    this.hasFilters = !!visible?.some(x => !x.overlay);\r\n    this.hasOverlayFilters = !!visible?.some(x => x.overlay);\r\n  }\r\n\r\n  apply(filter?: Filter) {\r\n    if (filter?.overlay) return;\r\n    this.overlay?.hide();\r\n    this.onFilter.emit(this.getRequests());\r\n  }\r\n\r\n  clear() {\r\n    this.filters?.filter(x => x.type != 'hidden').forEach(x => x.request.value = undefined);\r\n    this.filters = _.cloneDeep(this.filters);\r\n    this.onFilter.emit(this.getRequests());\r\n  }\r\n\r\n  getRequests(): FilterRequest[] | undefined {\r\n    return this.filters?.filter(x => hasValue(x.request)).map(x => x.request);\r\n  }\r\n\r\n  // TODO: Why ondestroy needed? \r\n  ngOnDestroy() {\r\n    this.filters?.filter(x => x.type != 'hidden').forEach(x => x.request.value = undefined);\r\n  }\r\n}\r\n","@if (hasFilters || hasOverlayFilters) {\n  <div class=\"d-flex align-items-center w-100\">\n    @if (hasFilters) {\n      <div class=\"filters\">\n        @for (filter of filters; track filter) {\n          @if (!filter.overlay) {\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context:{filter}\" />\n          }\n        }\n      </div>\n    }\n    <!-- // TODO: Enable overlay -->\n    <!--<ng-container *ngIf=\"hasOverlayFilters\">\n    <app-overlay [style]=\"{ 'min-width': '350px' }\">\n      <p class=\"font-semibold\">{{ 'Filtri' | translate }}</p>\n      <div class=\"panel-filters\">\n        <ng-container *ngFor=\"let filter of filters\">\n          <ng-container *ngIf=\"filter.overlay\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context:{filter}\" />\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"d-flex justify-content-end\">\n        <p-button [label]=\"'Cancella filtri'\" styleClass=\"p-button-text me-2\" (click)=\"clear()\" />\n        <p-button [label]=\"'Applica'\" styleClass=\"p-button-primary\" (click)=\"apply()\" />\n      </div>\n    </app-overlay>\n    <p-button icon=\"bi bi-funnel\" styleClass=\"p-button-primary {{ hasFilters ? 'ms-3' : '' }}\"\n      cdkOverlayOrigin #origin=\"cdkOverlayOrigin\" (click)=\"overlay.toggle(origin)\" />\n    </ng-container>-->\n  </div>\n}\n\n<ng-template #filterTemplate let-filter=\"filter\">\n  @if (filter.type !== 'hidden') {\n    <div class=\"filter\">\n      @switch (filter.type) {\n        @case ('text') {\n          <app-text-filter [filter]=\"filter\" (changed)=\"apply(filter)\" />\n        }\n        @case ('select') {\n          <app-select-filter [filter]=\"filter\" (changed)=\"apply(filter)\" />\n        }\n        @case ('date') {\n          <app-date-filter [filter]=\"filter\" (changed)=\"apply(filter)\" />\n        }\n      }\n    </div>\n  }\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\nimport { FilterComponent } from './filter/filter.component';\nimport { TextFilterComponent } from './text-filter/text-filter.component';\nimport { DateFilterComponent } from './date-filter/date-filter.component';\nimport { SelectFilterComponent } from './select-filter/select-filter.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { OverlayModule } from '../overlay/overlay.module';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [\n    FilterComponent,\n    TextFilterComponent,\n    DateFilterComponent,\n    SelectFilterComponent\n  ],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    OverlayModule,\n    // TODO: Date is in the right format?\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    // TODO: The position of the adapter is this?\n    // TODO: Remove from there and put in main application? (but console error if adapter not defined there)\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n    { provide: MAT_DATE_LOCALE, useValue: 'it-IT' },\n    { provide: DateAdapter, useClass: MatNativeDateModule },\n    { provide: MAT_DATE_FORMATS, useValue: {\n        parse: { dateInput: 'L' },\n        display: {\n          dateInput: 'DD/MM/YYYY',\n          monthYearLabel: 'MMM YYYY'\n        }\n      }\n    }\n  ],\n  exports: [\n    FilterComponent\n  ]\n})\nexport class FilterModule { }\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { SortOption } from '../../../models/sort-option';\r\nimport * as _ from 'lodash';\r\nimport { OverlayComponent } from '../../overlay/overlay/overlay.component'; // TODO: Ok?\r\n\r\n@Component({\r\n  selector: 'app-sort-panel',\r\n  templateUrl: './sort-panel.component.html',\r\n  styleUrls: ['./sort-panel.component.scss']\r\n})\r\nexport class SortPanelComponent {\r\n\r\n  @Input() values!: SortOption[];\r\n  @Input() title?: string;\r\n  @Input() multiple?: boolean;\r\n  @Output() changed = new EventEmitter<SortOption[]>();\r\n  @ViewChild(OverlayComponent) overlay!: OverlayComponent;\r\n  items: SortOption[] = [];\r\n  selected: string[] = [];\r\n\r\n  initialize() {\r\n    this.items = _.cloneDeep(this.values);\r\n    this.selected = this.items.filter(x => x.selected).map(x => x.name);\r\n  }\r\n\r\n  apply() {\r\n    this.items.forEach(x => x.selected = this.selected.includes(x.name));\r\n    this.changed.emit(this.items);\r\n    this.overlay.hide();\r\n  }\r\n\r\n  drop(event: CdkDragDrop<SortOption[]>) {\r\n    moveItemInArray(this.items, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  toggleDirection(sortItem: SortOption) {\r\n    const item = this.items.find(x => x.name === sortItem.name);\r\n    if (item) item.direction = item?.direction === 'desc' ? 'asc' : 'desc';\r\n  }\r\n}\r\n","<app-overlay [style]=\"{ 'min-width': '250px' }\" (onShow)=\"initialize()\">\n  <p class=\"font-semibold\">{{ title ?? 'Ordinamento' }}</p>\n\n  <ul class=\"list-group mb-2\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n    @for (item of items; track item) {\n      <li cdkDrag [cdkDragData]=\"item\" cdkDragBoundary=\".list-group\"\n        class=\"list-group-item list-group-item-action border-0 rounded d-flex align-items-center justify-content-between px-0\">\n        <div>\n          <i class=\"bi bi-grip-vertical handle\" cdkDragHandle></i>\n          <p-checkbox [value]=\"item.name\" [(ngModel)]=\"selected\" [inputId]=\"item.name\" />\n          <label class=\"label\" [for]=\"item.name\">{{ item.name }}</label>\n        </div>\n        <p-button icon=\"bi bi-arrow-{{ item.direction === 'desc' ? 'up' : 'down' }}\"\n          styleClass=\"p-button-rounded p-button-text\" (click)=\"toggleDirection(item)\" />\n        </li>\n      }\n    </ul>\n\n    <div class=\"d-flex justify-content-end\">\n      <p-button [label]=\"'Annulla'\" styleClass=\"p-button-text me-2\" (click)=\"overlay.hide()\" />\n      <p-button [label]=\"'Applica'\" styleClass=\"p-button-primary\" (click)=\"apply()\" />\n    </div>\n  </app-overlay>\n\n  @if (items) {\n    <p-button icon=\"bi bi-sort-down\" styleClass=\"p-button-primary\"\n      cdkOverlayOrigin #origin=\"cdkOverlayOrigin\" (click)=\"overlay.toggle(origin)\" />\n  }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { OverlayModule } from '../overlay/overlay.module';\nimport { OverlayModule as CdkOverlayModule } from '@angular/cdk/overlay'; // TODO: Ok?\nimport { SortPanelComponent } from './sort-panel/sort-panel.component';\nimport { CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SortPanelComponent\n  ],\n  imports: [\n    CommonModule, // TODO: NEeded? (in all components), why?\n    ButtonModule,\n    OverlayModule,\n    CdkOverlayModule,\n    CdkDrag,\n    CdkDropList,\n    CheckboxModule,\n    FormsModule\n  ],\n  exports: [\n    SortPanelComponent\n  ]\n})\nexport class SortPanelModule { }\n","export enum DataType {\r\n  Date,\r\n  Number,\r\n  Amount,\r\n  Image,\r\n  File,\r\n  Bool,\r\n  Color,\r\n  DateTime,\r\n  Check,\r\n  Users\r\n}\r\n","import { Directive, Input, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[table-column]'\r\n})\r\nexport class TableColumnDirective {\r\n    @Input('table-column') id!: string;\r\n    constructor(public template: TemplateRef<any>) { }\r\n}","import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef } from '@angular/core';\nimport { SortEvent } from 'primeng/api';\nimport { FilterRequest } from '../../../models/filter-request';\nimport { hasValue } from '../../../utils/utils';\nimport { Filter } from '../../../models/filter';\nimport { TableColumn } from '../../../models/table-column';\nimport { Action } from '../../../models/action';\nimport { TablePageEvent } from 'primeng/table';\nimport { DataType } from '../../../models/data-type';\nimport { TableColumnDirective } from '../table-column.directive';\n\n@Component({\n  selector: 'g-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent<T> {\n\n  @Input() columns!: TableColumn<T>[];\n  @Input() actions?: Action<T>[];\n  @Input() globalActions?: Action<T>[];\n  @Input() filters?: Filter[];\n  @Input() params: any = { };\n\n  @Input() totalItems?: number;\n  @Input() pageSize?: number = 10;\n\n  @Input() set data(value: T[] | undefined) { this.items = value }\n  @Output() changed = new EventEmitter();\n  @ContentChildren(TableColumnDirective) templates?: QueryList<TableColumnDirective>;\n  items?: T[];\n  DataType = DataType;\n\n  getTemplate(name: string): TemplateRef<any> | null {\n    return this.templates?.find(x => x.id === name)?.template ?? null;\n  }\n\n  // TODO: What if actions are not empty but all not vsible?\n  // Do not show table caption/action column!\n  // TODO: CEll height, borders of table\n\n  // TODO: Implement multiple-column sort\n  sort(event: SortEvent) {\n    const active = this.columns.find(x => x.sort === event.field)?.sort;\n    if (active) {\n      const direction = event.order == 1 ? 'asc' : 'desc';\n      this.params.orderBy = [active + ' ' + direction];\n      this.changed.emit(this.params);\n    }\n  }\n\n  pageChange(event: TablePageEvent) {\n    this.params.pageNumber = event.first / event.rows + 1;\n    this.params.pageSize = event.rows;\n    this.changed.emit(this.params);\n  }\n\n  // TODO: Page not changed when filter!!\n  filter(requests: FilterRequest[]) {\n    if (this.totalItems) this.params.pageNumber = 1;\n    this.params.filters = requests.filter(x => hasValue(x));\n    this.changed.emit(this.params);\n  }\n}\n","<!-- // TODO: Show paginator only when paging is active... -->\n<!-- // TODO: Check the condition of [totalRecords]-->\n<p-table [value]=\"items ?? []\" [lazy]=\"true\"\n  [paginator]=\"true\" [alwaysShowPaginator]=\"false\" [totalRecords]=\"totalItems ?? items?.length ?? 0\" [rows]=\"pageSize\"\n  [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"{first} - {last} di {totalRecords}\"\n  [rowsPerPageOptions]=\"[5, 10, 25, 100]\" (onSort)=\"sort($event)\" (onPage)=\"pageChange($event)\">\n\n  <!-- Table filters and actions -->\n  @if (filters?.length || globalActions?.length) {\n    <ng-template pTemplate=\"caption\">\n      <div class=\"d-flex align-items-center overflow-auto p-3\">\n        <app-filter [filters]=\"filters\" (onFilter)=\"filter($event)\" class=\"flex-grow-1\" />\n        @if (globalActions?.length) {\n          <app-action [actions]=\"globalActions\" class=\"ms-2\">\n            <ng-template #template let-action>\n              <p-button [label]=\"action.label\" styleClass=\"p-button-primary ms-2\" />\n            </ng-template>\n          </app-action>\n        }\n      </div>\n    </ng-template>\n  }\n\n  <!-- Table header -->\n  <ng-template pTemplate=\"header\">\n    <tr>\n      @for (column of columns; track column) {\n        <th [pSortableColumn]=\"column.sort\">\n          {{column.name}} \n          @if (column.sort) {\n            <p-sortIcon [field]=\"column.sort\" />\n            }\n      </th>\n    }\n    @if (actions) {\n      <th class=\"text-end\"></th>\n    }\n  </tr>\n</ng-template>\n\n<!-- Table body -->\n<ng-template pTemplate=\"body\" let-item>\n  <tr>\n    @for (column of columns; track column) {\n      <td>\n        <ng-container [ngTemplateOutlet]=\"column.template ? getTemplate(column.template) : tableTemplate\"\n          [ngTemplateOutletContext]=\"{ $implicit: item, column }\" />\n      </td>\n    }\n    @if (actions) {\n      <td class=\"text-end\">\n        <app-action [actions]=\"actions\" [data]=\"item\" />\n      </td>\n    }\n  </tr>\n</ng-template>\n\n<ng-template pTemplate=\"emptymessage\">\n  <tr>\n    <td [attr.colspan]=\"100\">\n      {{ 'Nessun elemento da visualizzare' }}\n    </td>\n  </tr>\n</ng-template>\n</p-table>\n\n<!-- Table data template -->\n<ng-template #tableTemplate let-item let-column=\"column\">\n  @switch (column.type) {\n        @case (DataType.Date) {\n            {{ column.value(item) | date: 'dd/MM/yyyy' }}\n        }\n        @case (DataType.DateTime) {\n            {{ column.value(item) | date: 'dd/MM/yyyy, hh:mm' }}\n        }\n        @case (DataType.Amount) {\n            {{ column.value(item) | currency: 'EUR': 'symbol' : undefined: 'it-IT' }}\n        }\n        @case (DataType.Bool) {\n            {{ column.value(item) ? 'Si': 'No' }}\n        <!-- // TODO: Translate -->\n        }\n        @case (DataType.Color) {\n            <i class=\"bi bi-circle-fill\" [style.color]=\"column.value(item)\"></i>\n        }\n        @default {\n            {{ column.value(item) }}\n        }\n    }\n  </ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { FilterModule } from '../filter'; // TODO: Or filter/module?\nimport { TableComponent } from './table/table.component';\nimport { TableModule as PrimengTableModule } from 'primeng/table';\nimport { ActionModule } from '../action/action.module';\n\n@NgModule({\n  declarations: [\n    TableComponent\n  ],\n  imports: [\n    // TODO: Keep only needed!!!\n    CommonModule,\n    ButtonModule,\n    FilterModule,\n    ActionModule,\n    PrimengTableModule\n  ],\n  exports: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i4","i2","CdkOverlayModule","i1","i3","i4.EditorDirective","i1.EditorService","i1.PickerService","i2.TextFilterComponent","i3.DateFilterComponent","i4.SelectFilterComponent","i2.OverlayComponent","i5","i4.FilterComponent","i5.ActionComponent","i6","PrimengTableModule"],"mappings":"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"}