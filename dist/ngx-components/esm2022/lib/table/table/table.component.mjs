import { Component, ContentChildren, EventEmitter, Input, Output } from '@angular/core';
import { hasValue } from '../../../utils/utils';
import { DataType } from '../../../models/data-type';
import { TableColumnDirective } from '../table-column.directive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "primeng/button";
import * as i3 from "primeng/api";
import * as i4 from "../../filter/filter/filter.component";
import * as i5 from "../../action/action/action.component";
import * as i6 from "primeng/table";
export class TableComponent {
    constructor() {
        this.params = {};
        this.pageSize = 10;
        this.changed = new EventEmitter();
        this.onColReordered = new EventEmitter();
        this.DataType = DataType;
    }
    set data(value) { this.items = value; }
    ngOnInit() {
        this.params.filters = this.filters?.map(x => x.request)?.filter(x => hasValue(x));
    }
    clearSelection() {
        this.selected = [];
    }
    sort(event) {
        const direction = (event.order == 1) ? 'asc' : 'desc';
        this.params.orderBy = event.field?.split(' ')?.map(x => x + ' ' + direction);
        this.changed.emit(this.params);
    }
    pageChange(event) {
        this.params.pageNumber = event.first / event.rows + 1;
        this.params.pageSize = event.rows;
        this.changed.emit(this.params);
    }
    filter(requests) {
        this.params.pageNumber = 1;
        this.params.filters = requests.filter(x => hasValue(x));
        this.changed.emit(this.params);
    }
    getTemplate(name) {
        return this.templates?.find(x => x.id === name)?.template ?? null;
    }
    onColReorder(event) {
        this.onColReordered.emit(event);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: TableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.0", type: TableComponent, selector: "g-table", inputs: { columns: "columns", params: "params", actions: "actions", tableActions: "tableActions", bulkActions: "bulkActions", filters: "filters", totalItems: "totalItems", pageSize: "pageSize", data: "data" }, outputs: { changed: "changed", onColReordered: "onColReordered" }, queries: [{ propertyName: "templates", predicate: TableColumnDirective }], ngImport: i0, template: "<!-- Bulk actions -->\n<div *ngIf=\"bulkActions?.length && selected?.length\" class=\"d-flex justify-content-between p-3 mb-3 rounded bg-light\">\n  <p-button [label]=\"'Annulla selezione'\" (click)=\"clearSelection()\" styleClass=\"p-button-outlined p-button-secondary\" />\n  <app-action [data]=\"selected\" [actions]=\"bulkActions\" class=\"d-flex gap-2\">\n    <ng-template #template let-action>\n      <p-button [label]=\"action.label\" />\n    </ng-template>\n  </app-action>\n</div>\n\n<!-- Table filters and actions -->\n<div *ngIf=\"filters?.length || tableActions?.length\" class=\"d-flex gap-3 justify-content-between align-items-center pb-3 overflow-auto\">\n  <app-filter [filters]=\"filters\" (onFilter)=\"filter($event)\" class=\"flex-grow-1\" />\n  <app-action *ngIf=\"tableActions?.length\" [actions]=\"tableActions\" class=\"d-flex gap-2\">\n    <ng-template #template let-action>\n      <p-button [label]=\"action.label\" />\n    </ng-template>\n  </app-action>\n</div>\n\n<!-- Table -->\n<p-table [resizableColumns]=\"true\" [value]=\"items ?? []\" responsiveLayout=\"scroll\" (onSort)=\"sort($event)\"\n  [customSort]=\"true\" [lazy]=\"true\" [(selection)]=\"selected\" [columns]=\"columns\"\n  [reorderableColumns]=\"true\" (onColReorder)=\"onColReorder($event)\"\n  [paginator]=\"true\" [alwaysShowPaginator]=\"false\" [totalRecords]=\"totalItems ?? items?.length ?? 0\" [rows]=\"pageSize\"\n  [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"{first} - {last} di {totalRecords}\"\n  [rowsPerPageOptions]=\"[5, 10, 25, 100]\" (onPage)=\"pageChange($event)\">\n  \n  <!-- Table header -->\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th style=\"width:0\" *ngIf=\"bulkActions?.length\">\n        <p-tableHeaderCheckbox />\n      </th>\n      <th *ngFor=\"let column of columns\" [pSortableColumn]=\"column.sort ?? ''\" pReorderableColumn>\n        {{column.name}} <p-sortIcon *ngIf=\"column.sort\" [field]=\"column.sort\" />\n      </th>\n      <th *ngIf=\"actions\" class=\"text-end\" style=\"width:0\"></th>\n    </tr>\n  </ng-template>\n\n  <!-- Table body -->\n  <ng-template pTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n    <tr [pSelectableRow]=\"item\" [pSelectableRowIndex]=\"rowIndex\">\n      <td *ngIf=\"bulkActions?.length\">\n        <p-tableCheckbox [value]=\"item\" />\n      </td>\n      <td *ngFor=\"let column of columns;\">\n        <ng-container [ngTemplateOutlet]=\"column.template ? getTemplate(column.template) : template\"\n          [ngTemplateOutletContext]=\"{ $implicit: item, column }\" />\n      </td>\n      <td class=\"text-end\" *ngIf=\"actions\">\n        <app-action [data]=\"item\" [actions]=\"actions\" />\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td class=\"mat-cell text-center\" [attr.colspan]=\"100\">\n        {{ 'Nessun elemento da visualizzare' }} <!-- // TODO: Translate -->\n      </td>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"paginatorleft\"></ng-template>\n</p-table>\n\n<!-- Table data template -->\n<ng-template #template let-item let-column=\"column\">\n  @switch (column.type) {\n    @case (DataType.Date) {\n        {{ column.value(item) | date: 'dd/MM/yyyy' }}\n    }\n    @case (DataType.DateTime) {\n        {{ column.value(item) | date: 'dd/MM/yyyy, hh:mm' }}\n    }\n    @case (DataType.Amount) {\n        {{ column.value(item) | currency: 'EUR': 'symbol' : undefined: 'it-IT' }}\n    }\n    @case (DataType.Bool) {\n        {{ column.value(item) ? 'Si': 'No' }}\n    <!-- // TODO: Translate -->\n    }\n    @case (DataType.Color) {\n        <i class=\"bi bi-circle-fill\" [style.color]=\"column.value(item)\"></i>\n    }\n    @default {\n        {{ column.value(item) }}\n    }\n  }\n</ng-template>", styles: [":host::ng-deep .p-datatable .p-datatable-tbody>tr>td{padding:.5rem 1rem;height:3.5rem}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "raised", "rounded", "text", "plain", "severity", "outlined", "link", "size", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "directive", type: i3.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "component", type: i4.FilterComponent, selector: "app-filter", inputs: ["filters"], outputs: ["onFilter"] }, { kind: "component", type: i5.ActionComponent, selector: "app-action", inputs: ["actions", "data"] }, { kind: "component", type: i6.Table, selector: "p-table", inputs: ["frozenColumns", "frozenValue", "style", "styleClass", "tableStyle", "tableStyleClass", "paginator", "pageLinks", "rowsPerPageOptions", "alwaysShowPaginator", "paginatorPosition", "paginatorStyleClass", "paginatorDropdownAppendTo", "paginatorDropdownScrollHeight", "currentPageReportTemplate", "showCurrentPageReport", "showJumpToPageDropdown", "showJumpToPageInput", "showFirstLastIcon", "showPageLinks", "defaultSortOrder", "sortMode", "resetPageOnSort", "selectionMode", "selectionPageOnly", "contextMenuSelection", "contextMenuSelectionMode", "dataKey", "metaKeySelection", "rowSelectable", "rowTrackBy", "lazy", "lazyLoadOnInit", "compareSelectionBy", "csvSeparator", "exportFilename", "filters", "globalFilterFields", "filterDelay", "filterLocale", "expandedRowKeys", "editingRowKeys", "rowExpandMode", "scrollable", "scrollDirection", "rowGroupMode", "scrollHeight", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "virtualScrollDelay", "frozenWidth", "responsive", "contextMenu", "resizableColumns", "columnResizeMode", "reorderableColumns", "loading", "loadingIcon", "showLoader", "rowHover", "customSort", "showInitialSortBadge", "autoLayout", "exportFunction", "exportHeader", "stateKey", "stateStorage", "editMode", "groupRowsBy", "groupRowsByOrder", "responsiveLayout", "breakpoint", "paginatorLocale", "value", "columns", "first", "rows", "totalRecords", "sortField", "sortOrder", "multiSortMeta", "selection", "selectAll", "virtualRowHeight"], outputs: ["contextMenuSelectionChange", "selectAllChange", "selectionChange", "onRowSelect", "onRowUnselect", "onPage", "onSort", "onFilter", "onLazyLoad", "onRowExpand", "onRowCollapse", "onContextMenuSelect", "onColResize", "onColReorder", "onRowReorder", "onEditInit", "onEditComplete", "onEditCancel", "onHeaderCheckboxToggle", "sortFunction", "firstChange", "rowsChange", "onStateSave", "onStateRestore"] }, { kind: "directive", type: i6.SortableColumn, selector: "[pSortableColumn]", inputs: ["pSortableColumn", "pSortableColumnDisabled"] }, { kind: "directive", type: i6.SelectableRow, selector: "[pSelectableRow]", inputs: ["pSelectableRow", "pSelectableRowIndex", "pSelectableRowDisabled"] }, { kind: "directive", type: i6.ReorderableColumn, selector: "[pReorderableColumn]", inputs: ["pReorderableColumnDisabled"] }, { kind: "component", type: i6.SortIcon, selector: "p-sortIcon", inputs: ["field"] }, { kind: "component", type: i6.TableCheckbox, selector: "p-tableCheckbox", inputs: ["disabled", "value", "index", "inputId", "name", "required", "ariaLabel"] }, { kind: "component", type: i6.TableHeaderCheckbox, selector: "p-tableHeaderCheckbox", inputs: ["disabled", "inputId", "name", "ariaLabel"] }, { kind: "pipe", type: i1.CurrencyPipe, name: "currency" }, { kind: "pipe", type: i1.DatePipe, name: "date" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: TableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'g-table', template: "<!-- Bulk actions -->\n<div *ngIf=\"bulkActions?.length && selected?.length\" class=\"d-flex justify-content-between p-3 mb-3 rounded bg-light\">\n  <p-button [label]=\"'Annulla selezione'\" (click)=\"clearSelection()\" styleClass=\"p-button-outlined p-button-secondary\" />\n  <app-action [data]=\"selected\" [actions]=\"bulkActions\" class=\"d-flex gap-2\">\n    <ng-template #template let-action>\n      <p-button [label]=\"action.label\" />\n    </ng-template>\n  </app-action>\n</div>\n\n<!-- Table filters and actions -->\n<div *ngIf=\"filters?.length || tableActions?.length\" class=\"d-flex gap-3 justify-content-between align-items-center pb-3 overflow-auto\">\n  <app-filter [filters]=\"filters\" (onFilter)=\"filter($event)\" class=\"flex-grow-1\" />\n  <app-action *ngIf=\"tableActions?.length\" [actions]=\"tableActions\" class=\"d-flex gap-2\">\n    <ng-template #template let-action>\n      <p-button [label]=\"action.label\" />\n    </ng-template>\n  </app-action>\n</div>\n\n<!-- Table -->\n<p-table [resizableColumns]=\"true\" [value]=\"items ?? []\" responsiveLayout=\"scroll\" (onSort)=\"sort($event)\"\n  [customSort]=\"true\" [lazy]=\"true\" [(selection)]=\"selected\" [columns]=\"columns\"\n  [reorderableColumns]=\"true\" (onColReorder)=\"onColReorder($event)\"\n  [paginator]=\"true\" [alwaysShowPaginator]=\"false\" [totalRecords]=\"totalItems ?? items?.length ?? 0\" [rows]=\"pageSize\"\n  [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"{first} - {last} di {totalRecords}\"\n  [rowsPerPageOptions]=\"[5, 10, 25, 100]\" (onPage)=\"pageChange($event)\">\n  \n  <!-- Table header -->\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th style=\"width:0\" *ngIf=\"bulkActions?.length\">\n        <p-tableHeaderCheckbox />\n      </th>\n      <th *ngFor=\"let column of columns\" [pSortableColumn]=\"column.sort ?? ''\" pReorderableColumn>\n        {{column.name}} <p-sortIcon *ngIf=\"column.sort\" [field]=\"column.sort\" />\n      </th>\n      <th *ngIf=\"actions\" class=\"text-end\" style=\"width:0\"></th>\n    </tr>\n  </ng-template>\n\n  <!-- Table body -->\n  <ng-template pTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n    <tr [pSelectableRow]=\"item\" [pSelectableRowIndex]=\"rowIndex\">\n      <td *ngIf=\"bulkActions?.length\">\n        <p-tableCheckbox [value]=\"item\" />\n      </td>\n      <td *ngFor=\"let column of columns;\">\n        <ng-container [ngTemplateOutlet]=\"column.template ? getTemplate(column.template) : template\"\n          [ngTemplateOutletContext]=\"{ $implicit: item, column }\" />\n      </td>\n      <td class=\"text-end\" *ngIf=\"actions\">\n        <app-action [data]=\"item\" [actions]=\"actions\" />\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td class=\"mat-cell text-center\" [attr.colspan]=\"100\">\n        {{ 'Nessun elemento da visualizzare' }} <!-- // TODO: Translate -->\n      </td>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"paginatorleft\"></ng-template>\n</p-table>\n\n<!-- Table data template -->\n<ng-template #template let-item let-column=\"column\">\n  @switch (column.type) {\n    @case (DataType.Date) {\n        {{ column.value(item) | date: 'dd/MM/yyyy' }}\n    }\n    @case (DataType.DateTime) {\n        {{ column.value(item) | date: 'dd/MM/yyyy, hh:mm' }}\n    }\n    @case (DataType.Amount) {\n        {{ column.value(item) | currency: 'EUR': 'symbol' : undefined: 'it-IT' }}\n    }\n    @case (DataType.Bool) {\n        {{ column.value(item) ? 'Si': 'No' }}\n    <!-- // TODO: Translate -->\n    }\n    @case (DataType.Color) {\n        <i class=\"bi bi-circle-fill\" [style.color]=\"column.value(item)\"></i>\n    }\n    @default {\n        {{ column.value(item) }}\n    }\n  }\n</ng-template>", styles: [":host::ng-deep .p-datatable .p-datatable-tbody>tr>td{padding:.5rem 1rem;height:3.5rem}\n"] }]
        }], propDecorators: { columns: [{
                type: Input
            }], params: [{
                type: Input
            }], actions: [{
                type: Input
            }], tableActions: [{
                type: Input
            }], bulkActions: [{
                type: Input
            }], filters: [{
                type: Input
            }], totalItems: [{
                type: Input
            }], pageSize: [{
                type: Input
            }], data: [{
                type: Input
            }], changed: [{
                type: Output
            }], onColReordered: [{
                type: Output
            }], templates: [{
                type: ContentChildren,
                args: [TableColumnDirective]
            }] } });
//# sourceMappingURL=data:application/json;base64,