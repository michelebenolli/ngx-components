import { Component, EventEmitter, InjectionToken, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@ng-bootstrap/ng-bootstrap";
import * as i2 from "primeng/button";
import * as i3 from "primeng/skeleton";
import * as i4 from "../editor.directive";
//import { MenuItem } from 'primeng/api';
//import { EditorTab } from '../../../models/editor-tab';
// Injection token that can be used to access the editor
export const EDITOR = new InjectionToken('editor');
// TODO: Translate labels! (save, cancel...)
// TODO: Re-enable tabs!
export class EditorComponent {
    //tabs?: MenuItem[];
    //activeTab?: MenuItem;
    constructor(offcanvas, changeDetector) {
        this.offcanvas = offcanvas;
        this.changeDetector = changeDetector;
        this.saved = new EventEmitter(); // TODO: Change name in "saved"?
        this.loading = false;
    }
    save() {
        this.saved.emit();
    }
    close(data) {
        this.offcanvas.close(data);
    }
    // TODO: Why needed?
    ngAfterContentChecked() {
        //this.changeDetector.detectChanges();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: EditorComponent, deps: [{ token: i1.NgbActiveOffcanvas }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.0", type: EditorComponent, selector: "app-editor", inputs: { component: "component", config: "config" }, ngImport: i0, template: "<div class=\"offcanvas-header\">\n  <div class=\"d-flex justify-content-between align-items-center w-100\">\n    <div class=\"flex-grow-1 text-truncate\">\n      <h5 class=\"title\">{{ config.title }}</h5>\n      @if (config.subtitle) {\n        <p class=\"subtitle\">{{ config.subtitle }}</p>\n      }\n    </div>\n    <!-- // TODO: Enable tabs -->\n    <!--<p-tabMenu [model]=\"tabs\" [activeItem]=\"activeTab\" (activeItemChange)=\"activeTab = $event\">\n    <ng-template pTemplate=\"item\" let-item>\n      <div class=\"tab-item\">\n        <i class=\"tab-icon {{item.icon}}\"></i>\n        <span class=\"tab-text\">{{ item.label }}</span>\n      </div>\n    </ng-template>\n  </p-tabMenu>-->\n</div>\n</div>\n\n<div class=\"offcanvas-body bg-light\">\n  <div class=\"offcanvas-content\">\n    @if (loading) {\n      @for (a of [].constructor(5); track a) {\n        <p-skeleton styleClass=\"mb-4\" height=\"3rem\" />\n      }\n    }\n    <ng-template appEditor [component]=\"component\" [editor]=\"this\" />\n  </div>\n</div>\n\n<div class=\"offcanvas-footer\">\n  <div class=\"offcanvas-footer-content\">\n    <!-- // TODO: Remove inline style, allow to add custom actions! -->\n    <p-button [text]=\"true\" [style]=\"{'height': '36px', 'margin-right': '0.5rem'}\" (click)=\"offcanvas.dismiss()\">\n      {{ 'Annulla' }}\n    </p-button>\n    <p-button [style]=\"{'height': '36px'}\" (click)=\"save()\">\n      {{ 'Salva' }}\n    </p-button>\n  </div>\n</div>\n", styles: [".offcanvas-header{background:#fff;position:absolute;border-bottom:1px solid #ebedef;width:100%;box-sizing:border-box;height:70px;padding-right:0}.offcanvas-body{position:absolute;inset:70px 0 50px;overflow:auto}.offcanvas-content{padding:20px;background:#fff;border-radius:3px}.offcanvas-footer{position:absolute;width:100%;height:50px;padding:1rem;border-top:1px solid #ebedef;bottom:0;display:flex}.offcanvas-footer-content{display:flex;align-items:center;margin-left:auto}.title,.subtitle{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-bottom:0}:host::ng-deep .p-menuitem-link{padding:0!important;height:70px!important}::ng-deep .myoffcanvas-small{--bs-offcanvas-width: 500px;max-width:100%}::ng-deep .myoffcanvas-medium{--bs-offcanvas-width: 1000px;max-width:100%}::ng-deep .myoffcanvas-large{--bs-offcanvas-width: 1500px;max-width:100%}.tab-item{display:flex;flex-direction:column;align-items:center;padding:1rem .5rem .5rem;min-width:70px}.tab-icon{display:block;font-size:18px}.tab-text{font-size:12px}\n"], dependencies: [{ kind: "component", type: i2.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "raised", "rounded", "text", "plain", "severity", "outlined", "link", "size", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "component", type: i3.Skeleton, selector: "p-skeleton", inputs: ["styleClass", "style", "shape", "animation", "borderRadius", "size", "width", "height"] }, { kind: "directive", type: i4.EditorDirective, selector: "[appEditor]", inputs: ["component", "editor"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: EditorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-editor', template: "<div class=\"offcanvas-header\">\n  <div class=\"d-flex justify-content-between align-items-center w-100\">\n    <div class=\"flex-grow-1 text-truncate\">\n      <h5 class=\"title\">{{ config.title }}</h5>\n      @if (config.subtitle) {\n        <p class=\"subtitle\">{{ config.subtitle }}</p>\n      }\n    </div>\n    <!-- // TODO: Enable tabs -->\n    <!--<p-tabMenu [model]=\"tabs\" [activeItem]=\"activeTab\" (activeItemChange)=\"activeTab = $event\">\n    <ng-template pTemplate=\"item\" let-item>\n      <div class=\"tab-item\">\n        <i class=\"tab-icon {{item.icon}}\"></i>\n        <span class=\"tab-text\">{{ item.label }}</span>\n      </div>\n    </ng-template>\n  </p-tabMenu>-->\n</div>\n</div>\n\n<div class=\"offcanvas-body bg-light\">\n  <div class=\"offcanvas-content\">\n    @if (loading) {\n      @for (a of [].constructor(5); track a) {\n        <p-skeleton styleClass=\"mb-4\" height=\"3rem\" />\n      }\n    }\n    <ng-template appEditor [component]=\"component\" [editor]=\"this\" />\n  </div>\n</div>\n\n<div class=\"offcanvas-footer\">\n  <div class=\"offcanvas-footer-content\">\n    <!-- // TODO: Remove inline style, allow to add custom actions! -->\n    <p-button [text]=\"true\" [style]=\"{'height': '36px', 'margin-right': '0.5rem'}\" (click)=\"offcanvas.dismiss()\">\n      {{ 'Annulla' }}\n    </p-button>\n    <p-button [style]=\"{'height': '36px'}\" (click)=\"save()\">\n      {{ 'Salva' }}\n    </p-button>\n  </div>\n</div>\n", styles: [".offcanvas-header{background:#fff;position:absolute;border-bottom:1px solid #ebedef;width:100%;box-sizing:border-box;height:70px;padding-right:0}.offcanvas-body{position:absolute;inset:70px 0 50px;overflow:auto}.offcanvas-content{padding:20px;background:#fff;border-radius:3px}.offcanvas-footer{position:absolute;width:100%;height:50px;padding:1rem;border-top:1px solid #ebedef;bottom:0;display:flex}.offcanvas-footer-content{display:flex;align-items:center;margin-left:auto}.title,.subtitle{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-bottom:0}:host::ng-deep .p-menuitem-link{padding:0!important;height:70px!important}::ng-deep .myoffcanvas-small{--bs-offcanvas-width: 500px;max-width:100%}::ng-deep .myoffcanvas-medium{--bs-offcanvas-width: 1000px;max-width:100%}::ng-deep .myoffcanvas-large{--bs-offcanvas-width: 1500px;max-width:100%}.tab-item{display:flex;flex-direction:column;align-items:center;padding:1rem .5rem .5rem;min-width:70px}.tab-icon{display:block;font-size:18px}.tab-text{font-size:12px}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgbActiveOffcanvas }, { type: i0.ChangeDetectorRef }], propDecorators: { component: [{
                type: Input
            }], config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jb21wb25lbnRzL3NyYy9saWIvZWRpdG9yL2VkaXRvci9lZGl0b3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWNvbXBvbmVudHMvc3JjL2xpYi9lZGl0b3IvZWRpdG9yL2VkaXRvci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQTBDLFNBQVMsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBUSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBRzdILHlDQUF5QztBQUN6Qyx5REFBeUQ7QUFFekQsd0RBQXdEO0FBQ3hELE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRyxJQUFJLGNBQWMsQ0FBa0IsUUFBUSxDQUFDLENBQUM7QUFFcEUsNENBQTRDO0FBQzVDLHdCQUF3QjtBQU14QixNQUFNLE9BQU8sZUFBZTtJQU0xQixvQkFBb0I7SUFDcEIsdUJBQXVCO0lBRXZCLFlBQ1MsU0FBNkIsRUFDNUIsY0FBaUM7UUFEbEMsY0FBUyxHQUFULFNBQVMsQ0FBb0I7UUFDNUIsbUJBQWMsR0FBZCxjQUFjLENBQW1CO1FBUDNDLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDLENBQUMsZ0NBQWdDO1FBQzVELFlBQU8sR0FBWSxLQUFLLENBQUM7SUFNc0IsQ0FBQztJQUVoRCxJQUFJO1FBQ0YsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsS0FBSyxDQUFDLElBQVU7UUFDZCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsb0JBQW9CO0lBQ3BCLHFCQUFxQjtRQUNuQixzQ0FBc0M7SUFDeEMsQ0FBQzs4R0F4QlUsZUFBZTtrR0FBZixlQUFlLHdHQ2pCNUIsODdDQTBDQTs7MkZEekJhLGVBQWU7a0JBTDNCLFNBQVM7K0JBQ0UsWUFBWTt1SEFNYixTQUFTO3NCQUFqQixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nYkFjdGl2ZU9mZmNhbnZhcyB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQWZ0ZXJDb250ZW50Q2hlY2tlZCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbmplY3Rpb25Ub2tlbiwgSW5wdXQsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRWRpdG9yQ29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2VkaXRvci1jb25maWcnO1xyXG5cclxuLy9pbXBvcnQgeyBNZW51SXRlbSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcclxuLy9pbXBvcnQgeyBFZGl0b3JUYWIgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvZWRpdG9yLXRhYic7XHJcblxyXG4vLyBJbmplY3Rpb24gdG9rZW4gdGhhdCBjYW4gYmUgdXNlZCB0byBhY2Nlc3MgdGhlIGVkaXRvclxyXG5leHBvcnQgY29uc3QgRURJVE9SID0gbmV3IEluamVjdGlvblRva2VuPEVkaXRvckNvbXBvbmVudD4oJ2VkaXRvcicpO1xyXG5cclxuLy8gVE9ETzogVHJhbnNsYXRlIGxhYmVscyEgKHNhdmUsIGNhbmNlbC4uLilcclxuLy8gVE9ETzogUmUtZW5hYmxlIHRhYnMhXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLWVkaXRvcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2VkaXRvci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZWRpdG9yLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEVkaXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudENoZWNrZWQge1xyXG5cclxuICBASW5wdXQoKSBjb21wb25lbnQhOiBUeXBlPGFueT47XHJcbiAgQElucHV0KCkgY29uZmlnITogRWRpdG9yQ29uZmlnO1xyXG4gIHNhdmVkID0gbmV3IEV2ZW50RW1pdHRlcigpOyAvLyBUT0RPOiBDaGFuZ2UgbmFtZSBpbiBcInNhdmVkXCI/XHJcbiAgbG9hZGluZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIC8vdGFicz86IE1lbnVJdGVtW107XHJcbiAgLy9hY3RpdmVUYWI/OiBNZW51SXRlbTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwdWJsaWMgb2ZmY2FudmFzOiBOZ2JBY3RpdmVPZmZjYW52YXMsXHJcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XHJcblxyXG4gIHNhdmUoKSB7XHJcbiAgICB0aGlzLnNhdmVkLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKGRhdGE/OiBhbnkpIHtcclxuICAgIHRoaXMub2ZmY2FudmFzLmNsb3NlKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgLy8gVE9ETzogV2h5IG5lZWRlZD9cclxuICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZCB7XHJcbiAgICAvL3RoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gIH1cclxuXHJcbiAgLypzZXRUYWJzKHRhYnM6IEVkaXRvclRhYltdKSB7XHJcbiAgICB0aGlzLnRhYnMgPSB0YWJzLm1hcDxNZW51SXRlbT4oeCA9PiAoeyAuLi54LCBpY29uOiAnYmkgYmktJyArIHguaWNvbiB9KSk7XHJcbiAgICB0aGlzLmFjdGl2ZVRhYiA9IHRoaXMudGFicy5maW5kKHggPT4geC5pZCA9PT0gdGhpcy5jb25maWcuYWN0aXZlVGFiKSA/PyB0aGlzLnRhYnNbMF07XHJcbiAgfSovXHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cIm9mZmNhbnZhcy1oZWFkZXJcIj5cbiAgPGRpdiBjbGFzcz1cImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBhbGlnbi1pdGVtcy1jZW50ZXIgdy0xMDBcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleC1ncm93LTEgdGV4dC10cnVuY2F0ZVwiPlxuICAgICAgPGg1IGNsYXNzPVwidGl0bGVcIj57eyBjb25maWcudGl0bGUgfX08L2g1PlxuICAgICAgQGlmIChjb25maWcuc3VidGl0bGUpIHtcbiAgICAgICAgPHAgY2xhc3M9XCJzdWJ0aXRsZVwiPnt7IGNvbmZpZy5zdWJ0aXRsZSB9fTwvcD5cbiAgICAgIH1cbiAgICA8L2Rpdj5cbiAgICA8IS0tIC8vIFRPRE86IEVuYWJsZSB0YWJzIC0tPlxuICAgIDwhLS08cC10YWJNZW51IFttb2RlbF09XCJ0YWJzXCIgW2FjdGl2ZUl0ZW1dPVwiYWN0aXZlVGFiXCIgKGFjdGl2ZUl0ZW1DaGFuZ2UpPVwiYWN0aXZlVGFiID0gJGV2ZW50XCI+XG4gICAgPG5nLXRlbXBsYXRlIHBUZW1wbGF0ZT1cIml0ZW1cIiBsZXQtaXRlbT5cbiAgICAgIDxkaXYgY2xhc3M9XCJ0YWItaXRlbVwiPlxuICAgICAgICA8aSBjbGFzcz1cInRhYi1pY29uIHt7aXRlbS5pY29ufX1cIj48L2k+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwidGFiLXRleHRcIj57eyBpdGVtLmxhYmVsIH19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgPC9wLXRhYk1lbnU+LS0+XG48L2Rpdj5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwib2ZmY2FudmFzLWJvZHkgYmctbGlnaHRcIj5cbiAgPGRpdiBjbGFzcz1cIm9mZmNhbnZhcy1jb250ZW50XCI+XG4gICAgQGlmIChsb2FkaW5nKSB7XG4gICAgICBAZm9yIChhIG9mIFtdLmNvbnN0cnVjdG9yKDUpOyB0cmFjayBhKSB7XG4gICAgICAgIDxwLXNrZWxldG9uIHN0eWxlQ2xhc3M9XCJtYi00XCIgaGVpZ2h0PVwiM3JlbVwiIC8+XG4gICAgICB9XG4gICAgfVxuICAgIDxuZy10ZW1wbGF0ZSBhcHBFZGl0b3IgW2NvbXBvbmVudF09XCJjb21wb25lbnRcIiBbZWRpdG9yXT1cInRoaXNcIiAvPlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwib2ZmY2FudmFzLWZvb3RlclwiPlxuICA8ZGl2IGNsYXNzPVwib2ZmY2FudmFzLWZvb3Rlci1jb250ZW50XCI+XG4gICAgPCEtLSAvLyBUT0RPOiBSZW1vdmUgaW5saW5lIHN0eWxlLCBhbGxvdyB0byBhZGQgY3VzdG9tIGFjdGlvbnMhIC0tPlxuICAgIDxwLWJ1dHRvbiBbdGV4dF09XCJ0cnVlXCIgW3N0eWxlXT1cInsnaGVpZ2h0JzogJzM2cHgnLCAnbWFyZ2luLXJpZ2h0JzogJzAuNXJlbSd9XCIgKGNsaWNrKT1cIm9mZmNhbnZhcy5kaXNtaXNzKClcIj5cbiAgICAgIHt7ICdBbm51bGxhJyB9fVxuICAgIDwvcC1idXR0b24+XG4gICAgPHAtYnV0dG9uIFtzdHlsZV09XCJ7J2hlaWdodCc6ICczNnB4J31cIiAoY2xpY2spPVwic2F2ZSgpXCI+XG4gICAgICB7eyAnU2FsdmEnIH19XG4gICAgPC9wLWJ1dHRvbj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==