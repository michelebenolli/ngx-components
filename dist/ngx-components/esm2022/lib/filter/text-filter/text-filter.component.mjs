import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "primeng/button";
import * as i2 from "@angular/material/form-field";
import * as i3 from "@angular/material/input";
import * as i4 from "@angular/forms";
export class TextFilterComponent {
    constructor() {
        this.changed = new EventEmitter();
    }
    clear() {
        this.setValue(undefined);
        this.value = undefined;
    }
    onInput() {
        setTimeout(() => { this.setValue(this.value); }, 500);
    }
    setValue(value) {
        this.filter.request.filters?.forEach(x => x.value = value);
        this.filter.request.value = value;
        this.changed.emit();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: TextFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.0", type: TextFilterComponent, selector: "app-text-filter", inputs: { filter: "filter" }, outputs: { changed: "changed" }, ngImport: i0, template: "<mat-form-field class=\"w-100\" subscriptSizing=\"dynamic\">\n  @if (filter.label) {\n    <mat-label>{{ filter.label }}</mat-label>\n  }\n  <input matInput type=\"text\" [(ngModel)]=\"value\" (ngModelChange)=\"onInput()\">\n  @if (filter.request?.value) {\n    <p-button matSuffix (click)=\"clear()\"\n      [text]=\"true\" [rounded]=\"true\" icon=\"bi bi-x-lg\" severity=\"secondary\" styleClass=\"me-1\" />\n  }\n</mat-form-field>", styles: [""], dependencies: [{ kind: "component", type: i1.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "raised", "rounded", "text", "plain", "severity", "outlined", "link", "size", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "component", type: i2.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i2.MatLabel, selector: "mat-label" }, { kind: "directive", type: i2.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "directive", type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: TextFilterComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-text-filter', template: "<mat-form-field class=\"w-100\" subscriptSizing=\"dynamic\">\n  @if (filter.label) {\n    <mat-label>{{ filter.label }}</mat-label>\n  }\n  <input matInput type=\"text\" [(ngModel)]=\"value\" (ngModelChange)=\"onInput()\">\n  @if (filter.request?.value) {\n    <p-button matSuffix (click)=\"clear()\"\n      [text]=\"true\" [rounded]=\"true\" icon=\"bi bi-x-lg\" severity=\"secondary\" styleClass=\"me-1\" />\n  }\n</mat-form-field>" }]
        }], propDecorators: { filter: [{
                type: Input
            }], changed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1maWx0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWNvbXBvbmVudHMvc3JjL2xpYi9maWx0ZXIvdGV4dC1maWx0ZXIvdGV4dC1maWx0ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWNvbXBvbmVudHMvc3JjL2xpYi9maWx0ZXIvdGV4dC1maWx0ZXIvdGV4dC1maWx0ZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBUXZFLE1BQU0sT0FBTyxtQkFBbUI7SUFMaEM7UUFRWSxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztLQWlCeEM7SUFkQyxLQUFLO1FBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztJQUN6QixDQUFDO0lBRUQsT0FBTztRQUNMLFVBQVUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFBLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQWM7UUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3RCLENBQUM7OEdBbkJVLG1CQUFtQjtrR0FBbkIsbUJBQW1CLHNIQ1JoQyxrYkFTaUI7OzJGRERKLG1CQUFtQjtrQkFML0IsU0FBUzsrQkFDRSxpQkFBaUI7OEJBTWxCLE1BQU07c0JBQWQsS0FBSztnQkFDSSxPQUFPO3NCQUFoQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2ZpbHRlcic7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC10ZXh0LWZpbHRlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3RleHQtZmlsdGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi90ZXh0LWZpbHRlci5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUZXh0RmlsdGVyQ29tcG9uZW50IHtcclxuXHJcbiAgQElucHV0KCkgZmlsdGVyITogRmlsdGVyO1xyXG4gIEBPdXRwdXQoKSBjaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIHZhbHVlPzogc3RyaW5nO1xyXG5cclxuICBjbGVhcigpIHsgXHJcbiAgICB0aGlzLnNldFZhbHVlKHVuZGVmaW5lZCk7XHJcbiAgICB0aGlzLnZhbHVlID0gdW5kZWZpbmVkO1xyXG4gIH1cclxuXHJcbiAgb25JbnB1dCgpIHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4geyB0aGlzLnNldFZhbHVlKHRoaXMudmFsdWUpfSwgNTAwKTtcclxuICB9XHJcblxyXG4gIHNldFZhbHVlKHZhbHVlPzogc3RyaW5nKSB7XHJcbiAgICB0aGlzLmZpbHRlci5yZXF1ZXN0LmZpbHRlcnM/LmZvckVhY2goeCA9PiB4LnZhbHVlID0gdmFsdWUpO1xyXG4gICAgdGhpcy5maWx0ZXIucmVxdWVzdC52YWx1ZSA9IHZhbHVlO1xyXG4gICAgdGhpcy5jaGFuZ2VkLmVtaXQoKTtcclxuICB9XHJcbn1cclxuIiwiPG1hdC1mb3JtLWZpZWxkIGNsYXNzPVwidy0xMDBcIiBzdWJzY3JpcHRTaXppbmc9XCJkeW5hbWljXCI+XG4gIEBpZiAoZmlsdGVyLmxhYmVsKSB7XG4gICAgPG1hdC1sYWJlbD57eyBmaWx0ZXIubGFiZWwgfX08L21hdC1sYWJlbD5cbiAgfVxuICA8aW5wdXQgbWF0SW5wdXQgdHlwZT1cInRleHRcIiBbKG5nTW9kZWwpXT1cInZhbHVlXCIgKG5nTW9kZWxDaGFuZ2UpPVwib25JbnB1dCgpXCI+XG4gIEBpZiAoZmlsdGVyLnJlcXVlc3Q/LnZhbHVlKSB7XG4gICAgPHAtYnV0dG9uIG1hdFN1ZmZpeCAoY2xpY2spPVwiY2xlYXIoKVwiXG4gICAgICBbdGV4dF09XCJ0cnVlXCIgW3JvdW5kZWRdPVwidHJ1ZVwiIGljb249XCJiaSBiaS14LWxnXCIgc2V2ZXJpdHk9XCJzZWNvbmRhcnlcIiBzdHlsZUNsYXNzPVwibWUtMVwiIC8+XG4gIH1cbjwvbWF0LWZvcm0tZmllbGQ+Il19