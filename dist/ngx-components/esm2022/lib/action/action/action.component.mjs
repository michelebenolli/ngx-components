import { Component, ContentChild, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "primeng/api";
import * as i2 from "../../../services/auth.service";
import * as i3 from "@angular/common";
import * as i4 from "primeng/menu";
import * as i5 from "primeng/tooltip";
import * as i6 from "primeng/button";
import * as i7 from "primeng/confirmdialog";
export class ActionComponent {
    constructor(confirmationService, authService) {
        this.confirmationService = confirmationService;
        this.authService = authService;
        this.key = Math.random().toString(36).substring(2, 10);
    }
    ngOnInit() {
        this.items = this.actions
            ?.filter(x => !x.permissions || this.authService.isAuthorized(x.permissions))
            .map(x => this.getItem(x));
    }
    openAction(item) {
        console.log('open action called');
        if (item.state?.['confirm'])
            this.confirm(item);
        else
            item.state?.['action']?.action?.(this.data);
    }
    confirm(item) {
        console.log('confirm called');
        this.confirmationService.confirm({
            key: this.key,
            header: 'Conferma',
            message: 'Confermi di voler effettuare l\'azione?',
            accept: () => {
                item.state?.['action']?.action?.(this.data);
                this.confirmationService.close();
            },
            reject: () => this.confirmationService.close()
        });
    }
    getItem(action) {
        return {
            label: action.name,
            icon: action.icon,
            items: action.items?.map(x => this.getItem(x)),
            visible: action.show?.(this.data) !== false,
            state: { action, confirm: action.confirm }, // TODO: Action in state needed?
            command: () => action.action?.(this.data) // TODO: Confirm does not work with sub-menu items!
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: ActionComponent, deps: [{ token: i1.ConfirmationService }, { token: i2.AuthService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.0", type: ActionComponent, selector: "g-action", inputs: { actions: "actions", data: "data" }, queries: [{ propertyName: "template", first: true, predicate: ["template"], descendants: true }], ngImport: i0, template: "@for (item of items; track item) {\n  @if (item.visible) {\n    <span (click)=\"item.items?.length ? menu.toggle($event) : openAction(item)\">\n      <ng-container *ngTemplateOutlet=\"template ?? icon; context: { $implicit: item }\" />\n      <p-menu #menu [model]=\"item.items\" [popup]=\"true\" appendTo=\"body\" />\n    </span>\n  }\n}\n\n<ng-template #icon let-item>\n  <p-button [pTooltip]=\"item.label\" [showDelay]=\"500\" tooltipPosition=\"top\"\n    [icon]=\"item.icon\" [text]=\"true\" [rounded]=\"true\" severity=\"secondary\" />\n</ng-template>\n\n<p-confirmDialog #dialog [key]=\"key\" [closable]=\"false\" [style]=\"{ 'min-width': '25vw'}\">\n  <ng-template pTemplate=\"message\" let-message>\n    {{ message.message }}\n  </ng-template>\n  <ng-template pTemplate=\"footer\" let-message>\n    {{ message | json }}\n    <p-button [label]=\"message?.rejectLabel ?? 'Annulla'\" [text]=\"true\" (click)=\"dialog.reject()\" />\n    <p-button [label]=\"message?.acceptLabel ?? 'Conferma'\" (click)=\"dialog.accept()\" />\n  </ng-template>\n</p-confirmDialog>", styles: [""], dependencies: [{ kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i4.Menu, selector: "p-menu", inputs: ["model", "popup", "style", "styleClass", "appendTo", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "ariaLabel", "ariaLabelledBy", "id", "tabindex"], outputs: ["onShow", "onHide", "onBlur", "onFocus"] }, { kind: "directive", type: i5.Tooltip, selector: "[pTooltip]", inputs: ["tooltipPosition", "tooltipEvent", "appendTo", "positionStyle", "tooltipStyleClass", "tooltipZIndex", "escape", "showDelay", "hideDelay", "life", "positionTop", "positionLeft", "autoHide", "fitContent", "hideOnEscape", "pTooltip", "tooltipDisabled", "tooltipOptions"] }, { kind: "component", type: i6.Button, selector: "p-button", inputs: ["type", "iconPos", "icon", "badge", "label", "disabled", "loading", "loadingIcon", "raised", "rounded", "text", "plain", "severity", "outlined", "link", "size", "style", "styleClass", "badgeClass", "ariaLabel"], outputs: ["onClick", "onFocus", "onBlur"] }, { kind: "directive", type: i1.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "component", type: i7.ConfirmDialog, selector: "p-confirmDialog", inputs: ["header", "icon", "message", "style", "styleClass", "maskStyleClass", "acceptIcon", "acceptLabel", "closeAriaLabel", "acceptAriaLabel", "acceptVisible", "rejectIcon", "rejectLabel", "rejectAriaLabel", "rejectVisible", "acceptButtonStyleClass", "rejectButtonStyleClass", "closeOnEscape", "dismissableMask", "blockScroll", "rtl", "closable", "appendTo", "key", "autoZIndex", "baseZIndex", "transitionOptions", "focusTrap", "defaultFocus", "breakpoints", "visible", "position"], outputs: ["onHide"] }, { kind: "pipe", type: i3.JsonPipe, name: "json" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.0", ngImport: i0, type: ActionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'g-action', template: "@for (item of items; track item) {\n  @if (item.visible) {\n    <span (click)=\"item.items?.length ? menu.toggle($event) : openAction(item)\">\n      <ng-container *ngTemplateOutlet=\"template ?? icon; context: { $implicit: item }\" />\n      <p-menu #menu [model]=\"item.items\" [popup]=\"true\" appendTo=\"body\" />\n    </span>\n  }\n}\n\n<ng-template #icon let-item>\n  <p-button [pTooltip]=\"item.label\" [showDelay]=\"500\" tooltipPosition=\"top\"\n    [icon]=\"item.icon\" [text]=\"true\" [rounded]=\"true\" severity=\"secondary\" />\n</ng-template>\n\n<p-confirmDialog #dialog [key]=\"key\" [closable]=\"false\" [style]=\"{ 'min-width': '25vw'}\">\n  <ng-template pTemplate=\"message\" let-message>\n    {{ message.message }}\n  </ng-template>\n  <ng-template pTemplate=\"footer\" let-message>\n    {{ message | json }}\n    <p-button [label]=\"message?.rejectLabel ?? 'Annulla'\" [text]=\"true\" (click)=\"dialog.reject()\" />\n    <p-button [label]=\"message?.acceptLabel ?? 'Conferma'\" (click)=\"dialog.accept()\" />\n  </ng-template>\n</p-confirmDialog>" }]
        }], ctorParameters: () => [{ type: i1.ConfirmationService }, { type: i2.AuthService }], propDecorators: { actions: [{
                type: Input
            }], data: [{
                type: Input
            }], template: [{
                type: ContentChild,
                args: ['template']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jb21wb25lbnRzL3NyYy9saWIvYWN0aW9uL2FjdGlvbi9hY3Rpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWNvbXBvbmVudHMvc3JjL2xpYi9hY3Rpb24vYWN0aW9uL2FjdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQXVCLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7QUFVcEYsTUFBTSxPQUFPLGVBQWU7SUFRMUIsWUFDVSxtQkFBd0MsRUFDeEMsV0FBd0I7UUFEeEIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQUN4QyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUpsQyxRQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBSVosQ0FBQztJQUV2QyxRQUFRO1FBQ04sSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTztZQUN2QixFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUM7YUFDNUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxVQUFVLENBQUMsSUFBYztRQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFFbEMsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsU0FBUyxDQUFDO1lBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7WUFDM0MsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsT0FBTyxDQUFDLElBQWM7UUFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUM7WUFDL0IsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHO1lBQ2IsTUFBTSxFQUFFLFVBQVU7WUFDbEIsT0FBTyxFQUFFLHlDQUF5QztZQUNsRCxNQUFNLEVBQUUsR0FBRyxFQUFFO2dCQUNYLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzVDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNuQyxDQUFDO1lBQ0QsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUU7U0FDL0MsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLE9BQU8sQ0FBQyxNQUFjO1FBQzVCLE9BQU87WUFDTCxLQUFLLEVBQUUsTUFBTSxDQUFDLElBQUk7WUFDbEIsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJO1lBQ2pCLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSztZQUMzQyxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRSxnQ0FBZ0M7WUFDNUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsbURBQW1EO1NBQzlGLENBQUE7SUFDSCxDQUFDOzhHQWpEVSxlQUFlO2tHQUFmLGVBQWUsZ01DVjVCLDRpQ0F1QmtCOzsyRkRiTCxlQUFlO2tCQUwzQixTQUFTOytCQUNFLFVBQVU7a0hBTVgsT0FBTztzQkFBZixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDb0IsUUFBUTtzQkFBakMsWUFBWTt1QkFBQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGQsIElucHV0LCBPbkluaXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maXJtYXRpb25TZXJ2aWNlLCBNZW51SXRlbSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9hY3Rpb24nO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9hdXRoLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdnLWFjdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY3Rpb24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9hY3Rpb24uY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBBY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBcbiAgQElucHV0KCkgYWN0aW9ucz86IEFjdGlvbltdO1xuICBASW5wdXQoKSBkYXRhPzogYW55O1xuICBAQ29udGVudENoaWxkKCd0ZW1wbGF0ZScpIHRlbXBsYXRlPzogVGVtcGxhdGVSZWY8YW55PjtcbiAgaXRlbXM/OiBNZW51SXRlbVtdO1xuICBrZXkgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTApO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgY29uZmlybWF0aW9uU2VydmljZTogQ29uZmlybWF0aW9uU2VydmljZSxcbiAgICBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pdGVtcyA9IHRoaXMuYWN0aW9uc1xuICAgICAgPy5maWx0ZXIoeCA9PiAheC5wZXJtaXNzaW9ucyB8fCB0aGlzLmF1dGhTZXJ2aWNlLmlzQXV0aG9yaXplZCh4LnBlcm1pc3Npb25zKSlcbiAgICAgIC5tYXAoeCA9PiB0aGlzLmdldEl0ZW0oeCkpO1xuICB9XG5cbiAgb3BlbkFjdGlvbihpdGVtOiBNZW51SXRlbSkge1xuICAgIGNvbnNvbGUubG9nKCdvcGVuIGFjdGlvbiBjYWxsZWQnKTtcblxuICAgIGlmIChpdGVtLnN0YXRlPy5bJ2NvbmZpcm0nXSkgdGhpcy5jb25maXJtKGl0ZW0pO1xuICAgIGVsc2UgaXRlbS5zdGF0ZT8uWydhY3Rpb24nXT8uYWN0aW9uPy4odGhpcy5kYXRhKTtcbiAgfVxuXG4gIGNvbmZpcm0oaXRlbTogTWVudUl0ZW0pIHtcbiAgICBjb25zb2xlLmxvZygnY29uZmlybSBjYWxsZWQnKTtcblxuICAgIHRoaXMuY29uZmlybWF0aW9uU2VydmljZS5jb25maXJtKHtcbiAgICAgIGtleTogdGhpcy5rZXksXG4gICAgICBoZWFkZXI6ICdDb25mZXJtYScsXG4gICAgICBtZXNzYWdlOiAnQ29uZmVybWkgZGkgdm9sZXIgZWZmZXR0dWFyZSBsXFwnYXppb25lPycsXG4gICAgICBhY2NlcHQ6ICgpID0+IHtcbiAgICAgICAgaXRlbS5zdGF0ZT8uWydhY3Rpb24nXT8uYWN0aW9uPy4odGhpcy5kYXRhKTtcbiAgICAgICAgdGhpcy5jb25maXJtYXRpb25TZXJ2aWNlLmNsb3NlKCk7XG4gICAgICB9LFxuICAgICAgcmVqZWN0OiAoKSA9PiB0aGlzLmNvbmZpcm1hdGlvblNlcnZpY2UuY2xvc2UoKVxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRJdGVtKGFjdGlvbjogQWN0aW9uKTogTWVudUl0ZW0ge1xuICAgIHJldHVybiB7XG4gICAgICBsYWJlbDogYWN0aW9uLm5hbWUsXG4gICAgICBpY29uOiBhY3Rpb24uaWNvbixcbiAgICAgIGl0ZW1zOiBhY3Rpb24uaXRlbXM/Lm1hcCh4ID0+IHRoaXMuZ2V0SXRlbSh4KSksXG4gICAgICB2aXNpYmxlOiBhY3Rpb24uc2hvdz8uKHRoaXMuZGF0YSkgIT09IGZhbHNlLFxuICAgICAgc3RhdGU6IHsgYWN0aW9uLCBjb25maXJtOiBhY3Rpb24uY29uZmlybSB9LCAvLyBUT0RPOiBBY3Rpb24gaW4gc3RhdGUgbmVlZGVkP1xuICAgICAgY29tbWFuZDogKCkgPT4gYWN0aW9uLmFjdGlvbj8uKHRoaXMuZGF0YSkgLy8gVE9ETzogQ29uZmlybSBkb2VzIG5vdCB3b3JrIHdpdGggc3ViLW1lbnUgaXRlbXMhXG4gICAgfVxuICB9XG59IiwiQGZvciAoaXRlbSBvZiBpdGVtczsgdHJhY2sgaXRlbSkge1xuICBAaWYgKGl0ZW0udmlzaWJsZSkge1xuICAgIDxzcGFuIChjbGljayk9XCJpdGVtLml0ZW1zPy5sZW5ndGggPyBtZW51LnRvZ2dsZSgkZXZlbnQpIDogb3BlbkFjdGlvbihpdGVtKVwiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRlbXBsYXRlID8/IGljb247IGNvbnRleHQ6IHsgJGltcGxpY2l0OiBpdGVtIH1cIiAvPlxuICAgICAgPHAtbWVudSAjbWVudSBbbW9kZWxdPVwiaXRlbS5pdGVtc1wiIFtwb3B1cF09XCJ0cnVlXCIgYXBwZW5kVG89XCJib2R5XCIgLz5cbiAgICA8L3NwYW4+XG4gIH1cbn1cblxuPG5nLXRlbXBsYXRlICNpY29uIGxldC1pdGVtPlxuICA8cC1idXR0b24gW3BUb29sdGlwXT1cIml0ZW0ubGFiZWxcIiBbc2hvd0RlbGF5XT1cIjUwMFwiIHRvb2x0aXBQb3NpdGlvbj1cInRvcFwiXG4gICAgW2ljb25dPVwiaXRlbS5pY29uXCIgW3RleHRdPVwidHJ1ZVwiIFtyb3VuZGVkXT1cInRydWVcIiBzZXZlcml0eT1cInNlY29uZGFyeVwiIC8+XG48L25nLXRlbXBsYXRlPlxuXG48cC1jb25maXJtRGlhbG9nICNkaWFsb2cgW2tleV09XCJrZXlcIiBbY2xvc2FibGVdPVwiZmFsc2VcIiBbc3R5bGVdPVwieyAnbWluLXdpZHRoJzogJzI1dncnfVwiPlxuICA8bmctdGVtcGxhdGUgcFRlbXBsYXRlPVwibWVzc2FnZVwiIGxldC1tZXNzYWdlPlxuICAgIHt7IG1lc3NhZ2UubWVzc2FnZSB9fVxuICA8L25nLXRlbXBsYXRlPlxuICA8bmctdGVtcGxhdGUgcFRlbXBsYXRlPVwiZm9vdGVyXCIgbGV0LW1lc3NhZ2U+XG4gICAge3sgbWVzc2FnZSB8IGpzb24gfX1cbiAgICA8cC1idXR0b24gW2xhYmVsXT1cIm1lc3NhZ2U/LnJlamVjdExhYmVsID8/ICdBbm51bGxhJ1wiIFt0ZXh0XT1cInRydWVcIiAoY2xpY2spPVwiZGlhbG9nLnJlamVjdCgpXCIgLz5cbiAgICA8cC1idXR0b24gW2xhYmVsXT1cIm1lc3NhZ2U/LmFjY2VwdExhYmVsID8/ICdDb25mZXJtYSdcIiAoY2xpY2spPVwiZGlhbG9nLmFjY2VwdCgpXCIgLz5cbiAgPC9uZy10ZW1wbGF0ZT5cbjwvcC1jb25maXJtRGlhbG9nPiJdfQ==